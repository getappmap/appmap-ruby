#!/usr/bin/env bash
set -ex

# Just checking for a healthy container isn't enough, apparently. If
# we don't wait here, sometimes the database is inaccessible.
for i in {1..10}; do
  psql -h pg -U postgres postgres -c 'select 1' >/dev/null 2>&1 && break
  printf ' .'
  sleep 1
done
echo
out="$(psql -h pg -U postgres postgres -c 'select 1' 2>&1)"
if [[ $? != 0 ]]; then
   echo "Postgres didn't start in time:"
   echo "$out"
   exit 1
fi

# Required for migrations
export ORM_MODULE=sequel

set +e
psql -h pg -U postgres -c "drop database if exists app_development"
psql -h pg -U postgres -c "drop database if exists app_test"
set -e

psql -h pg -U postgres -c "create database app_development"
psql -h pg -U postgres -c "create database app_test"

env RAILS_ENV=development bundle exec rake -t db:migrate
env RAILS_ENV=test bundle exec rake -t db:migrate
